/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.FacultyRole.FacultyRoleWorkResp02;

import Business.Business;
import Business.Profiles.FacultyProfile;
import javax.swing.JPanel;
import Business.University.CourseSchedule.CourseOffer;
import Business.University.CourseSchedule.CourseOffer;
import javax.swing.JOptionPane;

/**
 *
 * @author Hammad
 */
public class CourseManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseManagementJPanel
     */
    
JPanel CardSequencePanel;
Business business;
FacultyProfile facultyProfile;
    public CourseManagementJPanel(Business bz, FacultyProfile fp, JPanel jp) {
    CardSequencePanel = jp;
    this.business = bz;
    this.facultyProfile = fp;
    initComponents();
    setupTableColors();
    loadCourseData();
    }
    
    private void loadCourseData() {
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    
    // Add 9 test courses
    Object[] row1 = {"INFO 5100", "Application Engineering", "Java development course", "MW 10:00-11:30", "35/40", "Open", "Week 1: Intro to Java..."};
    Object[] row2 = {"INFO 6205", "Data Structures", "Algorithms and data structures", "TF 2:00-3:30", "35/35", "Closed", "Not Uploaded"};
    Object[] row3 = {"INFO 6150", "Web Development", "Modern web design", "MW 2:00-3:30", "28/30", "Open", "HTML, CSS, JavaScript..."};
    Object[] row4 = {"INFO 7245", "Big Data", "Processing large datasets", "T 6:00-9:00", "22/25", "Open", "Hadoop, Spark, MapReduce..."};
    Object[] row5 = {"INFO 6350", "Smartphones", "Mobile app development", "W 6:00-9:00", "18/20", "Closed", "Not Uploaded"};
    Object[] row6 = {"INFO 7390", "Data Science", "Machine learning basics", "TF 10:00-11:30", "30/35", "Open", "Python, ML algorithms..."};
    Object[] row7 = {"INFO 5200", "Database Management", "SQL and NoSQL databases", "MW 4:00-5:30", "25/30", "Open", "Not Uploaded"};
    Object[] row8 = {"INFO 6105", "Network Security", "Cybersecurity fundamentals", "T 4:00-7:00", "15/20", "Closed", "Encryption, firewalls..."};
    Object[] row9 = {"INFO 7500", "Cloud Computing", "AWS and Azure platforms", "F 2:00-5:00", "20/25", "Open", "Not Uploaded"};
    
    model.addRow(row1);
    model.addRow(row2);
    model.addRow(row3);
    model.addRow(row4);
    model.addRow(row5);
    model.addRow(row6);
    model.addRow(row7);
    model.addRow(row8);
    model.addRow(row9);
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitleCourse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnEnrollment = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        lblTitleCourse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitleCourse.setText("Course Management");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Number", "Course Title", "Description", "Schedule", "Capacity", "Enrollement Status", "Syllabus"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit Course");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnEnrollment.setText("Enrollment Status");
        btnEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollmentActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload/Modify syllabus");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTitleCourse)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnEnrollment)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblTitleCourse)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView)
                    .addComponent(btnEdit)
                    .addComponent(btnEnrollment)
                    .addComponent(btnRefresh)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout)
                    .addComponent(btnUpload)))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void setupTableColors() {
    // Set custom renderer for Enrollment Status column (column 5)
    jTable1.getColumnModel().getColumn(5).setCellRenderer(new javax.swing.table.DefaultTableCellRenderer() {
        @Override
        public java.awt.Component getTableCellRendererComponent(
            javax.swing.JTable table, Object value, boolean isSelected, 
            boolean hasFocus, int row, int column) {
            
            java.awt.Component c = super.getTableCellRendererComponent(
                table, value, isSelected, hasFocus, row, column);
            
            String status = (String) value;
            if (status != null) {
                if (status.equals("Open")) {
                    c.setForeground(new java.awt.Color(0, 153, 0));  // Green
                    c.setFont(c.getFont().deriveFont(java.awt.Font.BOLD));
                } else if (status.equals("Closed")) {
                    c.setForeground(new java.awt.Color(204, 0, 0));  // Red
                    c.setFont(c.getFont().deriveFont(java.awt.Font.BOLD));
                }
            }
            
            return c;
        }
    });
}
    
    
    
    
    
    
    
    
    
    
    
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
     int row = jTable1.getSelectedRow();
    
    if (row < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a course first!");
        return;
    }
    
  
    String courseNum = (String) jTable1.getValueAt(row, 0);
    String courseTitle = (String) jTable1.getValueAt(row, 1);
    String description = (String) jTable1.getValueAt(row, 2);
    String schedule = (String) jTable1.getValueAt(row, 3);
    String capacity = (String) jTable1.getValueAt(row, 4);
    String status = (String) jTable1.getValueAt(row, 5);
    String syllabus = (String) jTable1.getValueAt(row, 6);
    
   
    String details = "Course Number: " + courseNum + "\n" +
                    "Course Title: " + courseTitle + "\n" +
                    "Description: " + description + "\n" +
                    "Schedule: " + schedule + "\n" +
                    "Capacity: " + capacity + "\n" +
                    "Enrollment Status: " + status + "\n" +
                    "Credits: 4\n" +
                    "Price per Student: $6,000\n\n" +
                    "Syllabus:\n" +
                    "----------------------------------------\n" +
                    syllabus;
    
   
    javax.swing.JTextArea textArea = new javax.swing.JTextArea(details);
    textArea.setRows(20);
    textArea.setColumns(50);
    textArea.setLineWrap(true);
    textArea.setWrapStyleWord(true);
    textArea.setEditable(false);
    
    javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(textArea);
    
    javax.swing.JOptionPane.showMessageDialog(this, scrollPane, 
        "Course Details - " + courseNum, 
        javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
         int row = jTable1.getSelectedRow();
    
    if (row < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a course first!");
        return;
    }
    
    // Get current values
    String currentNumber = (String) jTable1.getValueAt(row, 0);
    String currentTitle = (String) jTable1.getValueAt(row, 1);
    String currentDesc = (String) jTable1.getValueAt(row, 2);
    String currentSchedule = (String) jTable1.getValueAt(row, 3);
    String currentCapacity = (String) jTable1.getValueAt(row, 4);
    String currentSyllabus = (String) jTable1.getValueAt(row, 6);
    
    // Edit Course Number
    String newNumber = javax.swing.JOptionPane.showInputDialog(this, "Edit Course Number:", currentNumber);
    if (newNumber != null && !newNumber.trim().isEmpty()) {
        jTable1.setValueAt(newNumber, row, 0);
    }
    
    // Edit Course Title
    String newTitle = javax.swing.JOptionPane.showInputDialog(this, "Edit Course Title:", currentTitle);
    if (newTitle != null && !newTitle.trim().isEmpty()) {
        jTable1.setValueAt(newTitle, row, 1);
    }
    
    // Edit Description
    String newDesc = javax.swing.JOptionPane.showInputDialog(this, "Edit Description:", currentDesc);
    if (newDesc != null && !newDesc.trim().isEmpty()) {
        jTable1.setValueAt(newDesc, row, 2);
    }
    
    // Edit Schedule
    String newSchedule = javax.swing.JOptionPane.showInputDialog(this, "Edit Schedule:", currentSchedule);
    if (newSchedule != null && !newSchedule.trim().isEmpty()) {
        jTable1.setValueAt(newSchedule, row, 3);
    }
    
    // Edit Capacity
    String newCapacity = javax.swing.JOptionPane.showInputDialog(this, "Edit Capacity:", currentCapacity);
    if (newCapacity != null && !newCapacity.trim().isEmpty()) {
        jTable1.setValueAt(newCapacity, row, 4);
    }
    
    String currentStatus = (String) jTable1.getValueAt(row, 5);
String newStatus = javax.swing.JOptionPane.showInputDialog(this, "Edit Enrollment Status (Open/Closed):", currentStatus);
if (newStatus != null && !newStatus.trim().isEmpty()) {
    jTable1.setValueAt(newStatus, row, 5);
}
    
    // Edit Syllabus
    String newSyllabus = javax.swing.JOptionPane.showInputDialog(this, "Edit Syllabus:", currentSyllabus);
    if (newSyllabus != null && !newSyllabus.trim().isEmpty()) {
        jTable1.setValueAt(newSyllabus, row, 6);
    }
    
    javax.swing.JOptionPane.showMessageDialog(this, "Course updated successfully!");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollmentActionPerformed
        // TODO add your handling code here:
       int row = jTable1.getSelectedRow();
    
    if (row < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a course first!");
        return;
    }
    
    // Get current status from table
    String currentStatus = (String) jTable1.getValueAt(row, 5);
    
    // Toggle the status
    String newStatus;
    if (currentStatus.equals("Open")) {
        newStatus = "Closed";
    } else {
        newStatus = "Open";
    }
    
    // Update the table
    jTable1.setValueAt(newStatus, row, 5);
    
    // Show success message
    javax.swing.JOptionPane.showMessageDialog(this, 
        "Enrollment status changed to: " + newStatus);
    }//GEN-LAST:event_btnEnrollmentActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        javax.swing.JOptionPane.showMessageDialog(this, "Refreshed!");
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).show(CardSequencePanel, "faculty");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
         int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to logout?", 
        "Confirm Logout", 
        JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        JOptionPane.showMessageDialog(this, "Logged out successfully!");
    }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
   int row = jTable1.getSelectedRow();
    
    if (row < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a course first!");
        return;
    }
    
    // Create file chooser
    javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
    
    // Filter for TXT files ONLY
    javax.swing.filechooser.FileNameExtensionFilter filter = 
        new javax.swing.filechooser.FileNameExtensionFilter(
            "Text Files Only (TXT)", "txt");
    fileChooser.setFileFilter(filter);
    
    // Show file chooser
    int result = fileChooser.showOpenDialog(this);
    
    if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
        java.io.File file = fileChooser.getSelectedFile();
        
        try {
            // Read file
            java.util.Scanner scanner = new java.util.Scanner(file);
            String content = "";
            while (scanner.hasNextLine()) {
                content = content + scanner.nextLine() + " ";
            }
            scanner.close();
            
            // Update table
            jTable1.setValueAt(content, row, 6);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Syllabus uploaded successfully!");
            
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error reading file!");
        }
    }
    }//GEN-LAST:event_btnUploadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEnrollment;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTitleCourse;
    // End of variables declaration//GEN-END:variables
}
